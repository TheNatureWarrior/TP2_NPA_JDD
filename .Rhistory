'd_dimer', 'crp')
colnames(df)<-newNames
#Note that many values are "", which aren't counted as NA.
df %>% group_by(smoke_hist) %>%
count()
#Fixing using mutate and na_if.
#Goes through all columns in df, checks if its a character
#column, and if it is, maps it through na_if, which replaces
#each "" value with NA.
df<-df %>%
mutate(across(where(is.character),~na_if(.,"")))
#To also clean out nulls in comorb
df<-df %>%
mutate(across(where(is.character),~na_if(.,"[]")))
df %>% group_by(comorb) %>%
count()
#Now to fix up the rest (reason, comorb, motor, verbal, eye)
#Testing some functions I may use to make clean function
grepl("helpmeout","why dont you help me out", fixed=TRUE)
grepl("hel","why odnt you help me out", fixed=TRUE)
grepl("apple", "happlessness",fixed=TRUE)
streamreason<- function(x){
ifelse(grepl("[J80]",x,fixed=TRUE),"ARDS",
ifelse(grepl("[J18.9]",x,fixed=TRUE),"Pneumonia",
ifelse(grepl("[U07.1]",x,fixed=TRUE),"COVID-19",
ifelse(grepl("[U07.2]",x,fixed=TRUE),"Probable COVID-19",
ifelse(grepl("[B34.2]",x,fixed=TRUE),"Coronavirus infection",
ifelse(grepl("[R05]",x,fixed=TRUE),"Cough",
ifelse(grepl("[J98.9, R50.9]",x,fixed=TRUE),"Febrile respiratory illness",
ifelse(grepl("[R50.9]",x,fixed=TRUE),"Fever",
ifelse(grepl("[R09.0]",x,fixed=TRUE),"Hypoxemia",
ifelse(grepl("[M79.19]",x,fixed=TRUE),"Myalgia",
ifelse(grepl("[U07.1, J12.8]",x,fixed=TRUE),"Pneumonia due to COVID-19",
ifelse(grepl("[R06.0]",x,fixed=TRUE),"Shortness of breath",
ifelse(grepl("[R06.0, U07.2]",x,fixed=TRUE),"Shortness of breath with exposure to COVID-19",
ifelse(grepl("[R06.8]",x,fixed=TRUE),"Tachypnea",
ifelse(grepl("[J12.9]",x,fixed=TRUE),"Viral pneumonia",
ifelse(grepl("[J96.99]",x,fixed=TRUE),"Respiratory failure",
ifelse(grepl("[J98.8]",x,fixed=TRUE),"Respiratory tract infection", x)
))))))))))))))))
}
df<-df %>%
mutate(across(where(is.character),~(streamreason(.))))
df %>% group_by(reason) %>%
count()
df$motor<-as.character(df$motor)
df$eye<-as.character(df$eye)
df$verbal<-as.character(df$verbal)
#End result only included Asthma, Chronic cardiac disease, chronic pulmonary disease, and diabetes.
#If the entry had either Hypertension or Chronic cardiac diease (not hypertension), it was counted as chronic cardiac disease.
#The functions included getting rid of special characters, alphabetizing, getting rid of the word other, getting rid of spaces, and the final condensing one.
#However, I realized that if I did things differently, I could skip right to the final step, as I would be setting the format myself and wouldn't have to worry about how many spaces, whether its alphabetized, etc..
#So, this function rolls all the comorb cleaning into one.
#Series of ifelse statements, with the truth values at the current line in comment form next to its line
#lot of special care had to be taken with commas and paratheses
#Note that the portion before the break and after the break are the same,
#except that Asthma is now false so none of its resulting strings have asthma in them
#(and the first line is missing, of course.)
fixcomorb<-function(x){
ifelse(grepl("Asthma",x,fixed=TRUE),
ifelse(grepl("ypertension",x,fixed=TRUE),  #a t
ifelse(grepl("pulmonary",x,fixed=TRUE), #a t h t
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h t p t
"Asthma, Chronic cardiac disease, Chronic pulmonary disease, Diabetes", #a t h t p t d t
"Asthma, Chronic cardiac disease, Chronic pulmonary disease"), #a t h t p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h t p f
"Asthma, Chronic cardiac disease, Diabetes", #a t h t p f d t
"Asthma, Chronic cardiac disease")),#a t h t p f d f
ifelse(grepl("pulmonary",x,fixed=TRUE),# a t h f
ifelse(grepl("Diabetes",x,fixed=TRUE),#a t h f p t
"Asthma, Chronic pulmonary disease, Diabetes",  #a t h f p t d t
"Asthma, Chronic pulmonary disease"),  #a t h f p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h f p f
"Asthma, Diabetes", #a t h f p f d t
"Asthma"))),  #a t h f p f d f
#FROM HERE ON, ASTHMA FALSE
ifelse(grepl("ypertension",x,fixed=TRUE), #a f
ifelse(grepl("pulmonary",x,fixed=TRUE),# a f h t
ifelse(grepl("Diabetes",x,fixed=TRUE), # a f h t p t
"Chronic cardiac disease, Chronic pulmonary disease, Diabetes",#a f h t p t d t
"Chronic cardiac disease, chronic pulmonary disease"), # a f h t p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE),   #a f h t p f
"Chronic cardiac disease, Diabetes",  #a f h t p f d t
"Chronic cardiac disease")), #a f h t p f d f
ifelse(grepl("pulmonary",x,fixed=TRUE),#a f h f
ifelse(grepl("Diabetes",x,fixed=TRUE),#a f h f p t
"Chronic pulmonary disease, Diabetes",#a f h f p t d t
"Chronic pulmonary disease"), #a f h f p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE),# a f h f p f
"Diabetes",# a f h f p f d t
NA)))) # a f h f p f d f
}
#Testing
dfex<-df
a<-sample(df$comorb,25)
a
fixcomorb(a)
df$comorb<-fixcomorb(df$comorb)
df %>% group_by(comorb) %>%
count()
fixd_dimer<-function(x){
if (typeof(x)=='str'){
if (x=='<270')
return('269')
if(x=='>4000')
return('4001') }
else
return(x)
}
c<-sample(df$d_dimer,25)
c
fixd_dimer(c)
fixddimer2<-function(x){
if (typeof(x)=='str')
return(x>'0',fixed=TRUE)
else
return(x)
}
b<-sample(df$d_dimer,25)
b
fixddimer2(b)
#plotting
library(ggplot2)
ggplot(df, aes(heart_rate, fill=reason)) + geom_bar() + labs(x= "Heart Rate")
+ ggtitle("Heart rate by reason for admission") + coord_flip()
ggplot(df, aes(comorb,oxygen_sat)) +
geom_point(stat='identity',color='darkgreen') + labs(x = "Known Illness ", y = "Oxygen Sat Lvl") +
ggtitle("Oxygen Intake with known illness") + coord_flip()
ggplot(df, aes(heart_rate, oxygen_sat(count), fill =comorb)) +
geom_density(position = "stack")
ggplot(df, aes(heart_rate, oxygen_sat, fill =comorb)) +
geom_density(position = "stack")
ggplot(df, aes(heart_rate, oxygen_sat, fill =age)) +
geom_density(position = "stack")
ggplot(df, aes(x=heart_rate, y=oxygen_sat, fill =age)) +
geom_density(position = "stack")
ggplot(df, aes(x=heart_rate, y=oxygen_sat, fill =age)) +
geom_density()
ggplot(df, aes(x=heart_rate, y=oxygen_sat, fill =age)) +
geom_density(y=oxygen_sat)
ggplot(df, aes(x=heart_rate, y=oxygen_sat, fill =age)) +
geom_density(stat='identity')
ggplot(df, aes(heart_rate,oxygen_sat, fill =age)) +
geom_density(stat='identity')
ggplot(df, aes(heart_rate,fill = oxygen_sat)) +
geom_density(stat='identity')
ggplot(df, aes(y=heart_rate,fill = oxygen_sat)) +
geom_density(stat='identity')
ggplot(df, aes(x=heart_rate,y==age, fill = oxygen_sat)) +
geom_density(stat='identity')
ggplot(df, aes(x=heart_rate,y=age, fill = oxygen_sat)) +
geom_density(stat='identity')
ggplot(df, aes(x=heart_rate,y=age, fill = 'oxygen_sat')) +
geom_density(stat='identity')
ggplot(df, aes(x=heart_rate,y=age, fill = 'oxygen_sat')) +
geom_density(position='stack')
ggplot(df, aes(x=heart_rate,y=age, fill = 'oxygen_sat')) +
geom_density(position='stack',y='heart_rate')
ggplot(df, aes(x=heart_rate,y=age, fill = 'oxygen_sat')) +
geom_density(position='stack',y=heart_rate)
ggplot(df, aes(x=heart_rate,y=age, fill = 'oxygen_sat')) +
geom_density(position='stack', y='heart_rate')
ggplot(df, aes(x=heart_rate,y=age, fill = 'reason')) +
geom_density(position='stack')
ggplot(df, aes(x=heart_rate,y=age, fill = 'reason')) +
geom_density(stat'identity')
ggplot(df, aes(x=heart_rate,y=age, fill = 'reason')) +
geom_density(stat='identity')
ggplot(df, aes(x=heart_rate,y=age, fill = reason)) +
geom_density(stat='identity')
ggplot(df, aes(x=heart_rate,y=age, fill = reason)) +
geom_density(position='stack')
ggplot(df, aes(x=heart_rate,y=age, fill = reason)) +
geom_density(position='stack')
ggplot(df, aes(x=heart_rate,y=age, fill = reason)) +
geom_density(stat='stack')
ggplot(df, aes(heart_rate, fill = comorb, colour = comorb)) +
geom_density(alpha = 0.1) +
xlim(55, 70)
ggplot(df, aes(heart_rate, fill = comorb, colour = comorb)) +
geom_density(alpha = 1) +
xlim(55, 70)
ggplot(df, aes(heart_rate, fill = comorb, colour = comorb)) +
geom_density(alpha = 0.5) +
xlim(55, 70)
ggplot(df, aes(heart_rate, fill = comorb, colour = comorb)) +
geom_density(alpha = 0.5) +
xlim(55, 70)
ggplot(df, aes(x=reason, fill=comorb))+
geom_bar(width = 1)+
coord_polar("x")
ggplot(df, aes(oxygen_sat, fill = heart_rate, colour = heart_rate)) +
geom_density(alpha = 0.5) +
xlim(55, 70)
ggplot(df, aes(age, fill = heart_rate, colour = heart_rate)) +
geom_density(alpha = 0.5) +
xlim(55, 70)
library(tidyverse)
library(lubridate)
#On top bar, go to Session:
#Set Working Directory:
#To Source File Location
df<-read.csv('Canada_Hosp1_COVID_Data_At_Admission.csv',sep=",")
#Going to drop all columns we dropped eventually in
#original project
df=subset(df,select = -c(id,ethnicity,ethnicity_other,received_covid_vaccine,
covid_vaccine,pao2,pao2_fio2,ph,
high_senstivity_cardiac_troponin,esr,ferritin,
hs_crp,aptt_aptr,medications,comorbidities_other))
#Now to rename.
newNames<-c('reason', 'age', 'sex', 'height', 'weight',
'comorb',
'smoke_hist', 'year_quit', 'er_2_weeks',
'adm_disp', 'systolic_bp',
'diastolic_bp', 'heart_rate', 'respiratory_rate',
'oxygen_sat', 'temp', 'motor', 'verbal', 'eye',
'intubated', 'wbc', 'rbc', 'hemoglobin', 'hematocrit', 'mcv', 'mch',
'mchc', 'rdw', 'platelet_count', 'pt', 'alt', 'ast', 'serum_creatinine',
'sodium', 'potassium', 'total_serum_bilirubin', 'lactate', 'inr',
'd_dimer', 'crp')
colnames(df)<-newNames
#Note that many values are "", which aren't counted as NA.
df %>% group_by(smoke_hist) %>%
count()
#Fixing using mutate and na_if.
#Goes through all columns in df, checks if its a character
#column, and if it is, maps it through na_if, which replaces
#each "" value with NA.
df<-df %>%
mutate(across(where(is.character),~na_if(.,"")))
#To also clean out nulls in comorb
df<-df %>%
mutate(across(where(is.character),~na_if(.,"[]")))
df %>% group_by(comorb) %>%
count()
#Now to fix up the rest (reason, comorb, motor, verbal, eye)
#Testing some functions I may use to make clean function
grepl("helpmeout","why dont you help me out", fixed=TRUE)
grepl("hel","why odnt you help me out", fixed=TRUE)
grepl("apple", "happlessness",fixed=TRUE)
streamreason<- function(x){
ifelse(grepl("[J80]",x,fixed=TRUE),"ARDS",
ifelse(grepl("[J18.9]",x,fixed=TRUE),"Pneumonia",
ifelse(grepl("[U07.1]",x,fixed=TRUE),"COVID-19",
ifelse(grepl("[U07.2]",x,fixed=TRUE),"Probable COVID-19",
ifelse(grepl("[B34.2]",x,fixed=TRUE),"Coronavirus infection",
ifelse(grepl("[R05]",x,fixed=TRUE),"Cough",
ifelse(grepl("[J98.9, R50.9]",x,fixed=TRUE),"Febrile respiratory illness",
ifelse(grepl("[R50.9]",x,fixed=TRUE),"Fever",
ifelse(grepl("[R09.0]",x,fixed=TRUE),"Hypoxemia",
ifelse(grepl("[M79.19]",x,fixed=TRUE),"Myalgia",
ifelse(grepl("[U07.1, J12.8]",x,fixed=TRUE),"Pneumonia due to COVID-19",
ifelse(grepl("[R06.0]",x,fixed=TRUE),"Shortness of breath",
ifelse(grepl("[R06.0, U07.2]",x,fixed=TRUE),"Shortness of breath with exposure to COVID-19",
ifelse(grepl("[R06.8]",x,fixed=TRUE),"Tachypnea",
ifelse(grepl("[J12.9]",x,fixed=TRUE),"Viral pneumonia",
ifelse(grepl("[J96.99]",x,fixed=TRUE),"Respiratory failure",
ifelse(grepl("[J98.8]",x,fixed=TRUE),"Respiratory tract infection", x)
))))))))))))))))
}
df<-df %>%
mutate(across(where(is.character),~(streamreason(.))))
df %>% group_by(reason) %>%
count()
df$motor<-as.character(df$motor)
df$eye<-as.character(df$eye)
df$verbal<-as.character(df$verbal)
#End result only included Asthma, Chronic cardiac disease, chronic pulmonary disease, and diabetes.
#If the entry had either Hypertension or Chronic cardiac diease (not hypertension), it was counted as chronic cardiac disease.
#The functions included getting rid of special characters, alphabetizing, getting rid of the word other, getting rid of spaces, and the final condensing one.
#However, I realized that if I did things differently, I could skip right to the final step, as I would be setting the format myself and wouldn't have to worry about how many spaces, whether its alphabetized, etc..
#So, this function rolls all the comorb cleaning into one.
#Series of ifelse statements, with the truth values at the current line in comment form next to its line
#lot of special care had to be taken with commas and paratheses
#Note that the portion before the break and after the break are the same,
#except that Asthma is now false so none of its resulting strings have asthma in them
#(and the first line is missing, of course.)
fixcomorb<-function(x){
ifelse(grepl("Asthma",x,fixed=TRUE),
ifelse(grepl("ypertension",x,fixed=TRUE),  #a t
ifelse(grepl("pulmonary",x,fixed=TRUE), #a t h t
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h t p t
"Asthma, Chronic cardiac disease, Chronic pulmonary disease, Diabetes", #a t h t p t d t
"Asthma, Chronic cardiac disease, Chronic pulmonary disease"), #a t h t p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h t p f
"Asthma, Chronic cardiac disease, Diabetes", #a t h t p f d t
"Asthma, Chronic cardiac disease")),#a t h t p f d f
ifelse(grepl("pulmonary",x,fixed=TRUE),# a t h f
ifelse(grepl("Diabetes",x,fixed=TRUE),#a t h f p t
"Asthma, Chronic pulmonary disease, Diabetes",  #a t h f p t d t
"Asthma, Chronic pulmonary disease"),  #a t h f p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h f p f
"Asthma, Diabetes", #a t h f p f d t
"Asthma"))),  #a t h f p f d f
#FROM HERE ON, ASTHMA FALSE
ifelse(grepl("ypertension",x,fixed=TRUE), #a f
ifelse(grepl("pulmonary",x,fixed=TRUE),# a f h t
ifelse(grepl("Diabetes",x,fixed=TRUE), # a f h t p t
"Chronic cardiac disease, Chronic pulmonary disease, Diabetes",#a f h t p t d t
"Chronic cardiac disease, chronic pulmonary disease"), # a f h t p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE),   #a f h t p f
"Chronic cardiac disease, Diabetes",  #a f h t p f d t
"Chronic cardiac disease")), #a f h t p f d f
ifelse(grepl("pulmonary",x,fixed=TRUE),#a f h f
ifelse(grepl("Diabetes",x,fixed=TRUE),#a f h f p t
"Chronic pulmonary disease, Diabetes",#a f h f p t d t
"Chronic pulmonary disease"), #a f h f p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE),# a f h f p f
"Diabetes",# a f h f p f d t
NA)))) # a f h f p f d f
}
#Testing
dfex<-df
a<-sample(df$comorb,25)
a
fixcomorb(a)
df$comorb<-fixcomorb(df$comorb)
df %>% group_by(comorb) %>%
count()
fixd_dimer<-function(x){
if (typeof(x)=='str'){
if (x=='<270')
return('269')
if(x=='>4000')
return('4001') }
else
return(x)
}
c<-sample(df$d_dimer,25)
c
fixd_dimer(c)
fixddimer2<-function(x){
if (typeof(x)=='str')
return(x>'0',fixed=TRUE)
else
return(x)
}
b<-sample(df$d_dimer,25)
b
fixddimer2(b)
#plotting
library(ggplot2)
ggplot(df, aes(heart_rate, fill=reason)) + geom_bar() + labs(x= "Heart Rate")
+ ggtitle("Heart rate by reason for admission") + coord_flip()
ggplot(df, aes(comorb,oxygen_sat)) +
geom_point(stat='identity',color='darkgreen') + labs(x = "Known Illness ", y = "Oxygen Sat Lvl") +
ggtitle("Oxygen Intake with known illness") + coord_flip()
ggplot(df, aes(heart_rate, fill = comorb, colour = comorb)) +
geom_density(alpha = 0.5) +
xlim(55, 70)
ggplot(df, aes(age, fill = heart_rate, colour = heart_rate)) +
geom_density(alpha = 0.5) +
xlim(55, 70)
ggplot(df, aes(x=reason, fill=comorb))+
geom_bar(width = 1)+
coord_polar("x")
library(tidyverse)
library(lubridate)
#On top bar, go to Session:
#Set Working Directory:
#To Source File Location
df<-read.csv('Canada_Hosp1_COVID_Data_At_Admission.csv',sep=",")
#Going to drop all columns we dropped eventually in
#original project
df=subset(df,select = -c(id,ethnicity,ethnicity_other,received_covid_vaccine,
covid_vaccine,pao2,pao2_fio2,ph,
high_senstivity_cardiac_troponin,esr,ferritin,
hs_crp,aptt_aptr,medications,comorbidities_other))
#Now to rename.
newNames<-c('reason', 'age', 'sex', 'height', 'weight',
'comorb',
'smoke_hist', 'year_quit', 'er_2_weeks',
'adm_disp', 'systolic_bp',
'diastolic_bp', 'heart_rate', 'respiratory_rate',
'oxygen_sat', 'temp', 'motor', 'verbal', 'eye',
'intubated', 'wbc', 'rbc', 'hemoglobin', 'hematocrit', 'mcv', 'mch',
'mchc', 'rdw', 'platelet_count', 'pt', 'alt', 'ast', 'serum_creatinine',
'sodium', 'potassium', 'total_serum_bilirubin', 'lactate', 'inr',
'd_dimer', 'crp')
colnames(df)<-newNames
#Note that many values are "", which aren't counted as NA.
df %>% group_by(smoke_hist) %>%
count()
#Fixing using mutate and na_if.
#Goes through all columns in df, checks if its a character
#column, and if it is, maps it through na_if, which replaces
#each "" value with NA.
df<-df %>%
mutate(across(where(is.character),~na_if(.,"")))
#To also clean out nulls in comorb
df<-df %>%
mutate(across(where(is.character),~na_if(.,"[]")))
df %>% group_by(comorb) %>%
count()
#Now to fix up the rest (reason, comorb, motor, verbal, eye)
#Testing some functions I may use to make clean function
grepl("helpmeout","why dont you help me out", fixed=TRUE)
grepl("hel","why odnt you help me out", fixed=TRUE)
grepl("apple", "happlessness",fixed=TRUE)
streamreason<- function(x){
ifelse(grepl("[J80]",x,fixed=TRUE),"ARDS",
ifelse(grepl("[J18.9]",x,fixed=TRUE),"Pneumonia",
ifelse(grepl("[U07.1]",x,fixed=TRUE),"COVID-19",
ifelse(grepl("[U07.2]",x,fixed=TRUE),"Probable COVID-19",
ifelse(grepl("[B34.2]",x,fixed=TRUE),"Coronavirus infection",
ifelse(grepl("[R05]",x,fixed=TRUE),"Cough",
ifelse(grepl("[J98.9, R50.9]",x,fixed=TRUE),"Febrile respiratory illness",
ifelse(grepl("[R50.9]",x,fixed=TRUE),"Fever",
ifelse(grepl("[R09.0]",x,fixed=TRUE),"Hypoxemia",
ifelse(grepl("[M79.19]",x,fixed=TRUE),"Myalgia",
ifelse(grepl("[U07.1, J12.8]",x,fixed=TRUE),"Pneumonia due to COVID-19",
ifelse(grepl("[R06.0]",x,fixed=TRUE),"Shortness of breath",
ifelse(grepl("[R06.0, U07.2]",x,fixed=TRUE),"Shortness of breath with exposure to COVID-19",
ifelse(grepl("[R06.8]",x,fixed=TRUE),"Tachypnea",
ifelse(grepl("[J12.9]",x,fixed=TRUE),"Viral pneumonia",
ifelse(grepl("[J96.99]",x,fixed=TRUE),"Respiratory failure",
ifelse(grepl("[J98.8]",x,fixed=TRUE),"Respiratory tract infection", x)
))))))))))))))))
}
df<-df %>%
mutate(across(where(is.character),~(streamreason(.))))
df %>% group_by(reason) %>%
count()
df$motor<-as.character(df$motor)
df$eye<-as.character(df$eye)
df$verbal<-as.character(df$verbal)
#End result only included Asthma, Chronic cardiac disease, chronic pulmonary disease, and diabetes.
#If the entry had either Hypertension or Chronic cardiac diease (not hypertension), it was counted as chronic cardiac disease.
#The functions included getting rid of special characters, alphabetizing, getting rid of the word other, getting rid of spaces, and the final condensing one.
#However, I realized that if I did things differently, I could skip right to the final step, as I would be setting the format myself and wouldn't have to worry about how many spaces, whether its alphabetized, etc..
#So, this function rolls all the comorb cleaning into one.
#Series of ifelse statements, with the truth values at the current line in comment form next to its line
#lot of special care had to be taken with commas and paratheses
#Note that the portion before the break and after the break are the same,
#except that Asthma is now false so none of its resulting strings have asthma in them
#(and the first line is missing, of course.)
fixcomorb<-function(x){
ifelse(grepl("Asthma",x,fixed=TRUE),
ifelse(grepl("ypertension",x,fixed=TRUE),  #a t
ifelse(grepl("pulmonary",x,fixed=TRUE), #a t h t
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h t p t
"Asthma, Chronic cardiac disease, Chronic pulmonary disease, Diabetes", #a t h t p t d t
"Asthma, Chronic cardiac disease, Chronic pulmonary disease"), #a t h t p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h t p f
"Asthma, Chronic cardiac disease, Diabetes", #a t h t p f d t
"Asthma, Chronic cardiac disease")),#a t h t p f d f
ifelse(grepl("pulmonary",x,fixed=TRUE),# a t h f
ifelse(grepl("Diabetes",x,fixed=TRUE),#a t h f p t
"Asthma, Chronic pulmonary disease, Diabetes",  #a t h f p t d t
"Asthma, Chronic pulmonary disease"),  #a t h f p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE), #a t h f p f
"Asthma, Diabetes", #a t h f p f d t
"Asthma"))),  #a t h f p f d f
#FROM HERE ON, ASTHMA FALSE
ifelse(grepl("ypertension",x,fixed=TRUE), #a f
ifelse(grepl("pulmonary",x,fixed=TRUE),# a f h t
ifelse(grepl("Diabetes",x,fixed=TRUE), # a f h t p t
"Chronic cardiac disease, Chronic pulmonary disease, Diabetes",#a f h t p t d t
"Chronic cardiac disease, chronic pulmonary disease"), # a f h t p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE),   #a f h t p f
"Chronic cardiac disease, Diabetes",  #a f h t p f d t
"Chronic cardiac disease")), #a f h t p f d f
ifelse(grepl("pulmonary",x,fixed=TRUE),#a f h f
ifelse(grepl("Diabetes",x,fixed=TRUE),#a f h f p t
"Chronic pulmonary disease, Diabetes",#a f h f p t d t
"Chronic pulmonary disease"), #a f h f p t d f
ifelse(grepl("Diabetes",x,fixed=TRUE),# a f h f p f
"Diabetes",# a f h f p f d t
NA)))) # a f h f p f d f
}
#Testing
dfex<-df
a<-sample(df$comorb,25)
a
fixcomorb(a)
df$comorb<-fixcomorb(df$comorb)
df %>% group_by(comorb) %>%
count()
fixd_dimer<-function(x){
if (typeof(x)=='str'){
if (x=='<270')
return('269')
if(x=='>4000')
return('4001') }
else
return(x)
}
c<-sample(df$d_dimer,25)
c
fixd_dimer(c)
fixddimer2<-function(x){
if (typeof(x)=='str')
return(x>'0',fixed=TRUE)
else
return(x)
}
b<-sample(df$d_dimer,25)
b
fixddimer2(b)
#plotting
library(ggplot2)
ggplot(df, aes(heart_rate, fill=reason)) + geom_bar() + labs(x= "Heart Rate")
+ ggtitle("Heart rate by reason for admission") + coord_flip()
ggplot(df, aes(comorb,oxygen_sat)) +
geom_point(stat='identity',color='darkgreen') + labs(x = "Known Illness ", y = "Oxygen Sat Lvl") +
ggtitle("Oxygen Intake with known illness") + coord_flip()
ggplot(df, aes(heart_rate, fill = comorb, colour = comorb)) +
geom_density(alpha = 0.5) +
xlim(55, 70)
ggplot(df, aes(x=reason, fill=comorb))+
geom_bar(width = 1)+
coord_polar("x")
